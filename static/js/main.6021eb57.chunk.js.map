{"version":3,"sources":["GoodsList.tsx","api/goods.ts","types/Button.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","getAll","fetch","then","response","json","Button","App","useState","setGoods","button","setButton","useEffect","all","five","sort","a","b","localeCompare","slice","red","filter","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"wMAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAOF,EAAKE,OAHvB,SAKGF,EAAKG,MAJDH,EAAKI,UCLX,SAASC,IACd,OAAOC,MAJP,yEAKGC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,ICXKC,G,SAAAA,K,UAAAA,E,YAAAA,E,WAAAA,M,KCOL,IAAMC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOd,EAAP,KAAce,EAAd,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KAsBA,OApBAC,qBAAU,WACR,OAAQF,GACN,KAAKJ,EAAOO,IACVZ,IAASE,KAAKM,GACd,MAEF,KAAKH,EAAOQ,KFLTb,IACJE,MAAK,SAAAT,GAAK,OAAIA,EACZqB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEjB,KAAKmB,cAAcD,EAAElB,SACtCoB,MAAM,EAAG,MEGIhB,KAAKM,GACjB,MAEF,KAAKH,EAAOc,IFFTnB,IACJE,MAAK,SAAAT,GAAK,OAAIA,EAAM2B,QACnB,SAAAzB,GAAI,MAAmB,QAAfA,EAAKE,YECGK,KAAKM,GACnB,MAEF,QACEA,EAAS,OAGZ,CAACC,IAGF,sBAAKY,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMb,EAAUL,EAAOO,MAHlC,4BAQA,wBACEU,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMb,EAAUL,EAAOQ,OAHlC,gCAQA,wBACES,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMb,EAAUL,EAAOc,MAHlC,4BAQA,cAAC,EAAD,CAAW1B,MAAOA,QCxDxB+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.6021eb57.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\nconst API_URL = (\n  'https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json'\n);\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(\n      good => good.color === 'red',\n    ));\n};\n","export enum Button {\n  all = 'All',\n  five = 'Five',\n  red = 'Red',\n}\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\nimport { get5First, getAll, getRedGoods } from './api/goods';\nimport { Button } from './types/Button';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [button, setButton] = useState('');\n\n  useEffect(() => {\n    switch (button) {\n      case Button.all:\n        getAll().then(setGoods);\n        break;\n\n      case Button.five:\n        get5First().then(setGoods);\n        break;\n\n      case Button.red:\n        getRedGoods().then(setGoods);\n        break;\n\n      default:\n        setGoods([]);\n        break;\n    }\n  }, [button]);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => setButton(Button.all)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => setButton(Button.five)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => setButton(Button.red)}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}